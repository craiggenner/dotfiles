#!/usr/bin/env bash

# set -euo pipefail

profile=default

while getopts ":hp:t:" opt; do
	case $opt in
		p)
			profile=$OPTARG
			;;
		t)
			token_code=$OPTARG
			;;
		h)
			echo "Usage: -p [PROFILE] -t [MFA_CODE]"
			exit 1
			;;
		\? )
			echo "Invalid option: $OPTARG" 1>&2
			exit 1
			;;
		: )
			echo "Invalid option: -$OPTARG requires an argument" 1>&2
			exit 1
			;;
	esac
done

if [ "${token_code}" != "" ]; then
	if $(echo $token_code | grep -v '^[0-9]\{6\}$' > /dev/null); then
		echo "Invalid MFA code: ${token_code}"
		exit 1
	fi
else
	echo "Error: Missing MFA code"
	exit 1
fi

if [ "${profile}" = "" ]; then
	echo "Error: Missing profile"
	exit 1
fi

token_file="$(dirname "${BASH_SOURCE[0]}")/.$(basename $0)"

if [ -e "${token_file}" ]; then
  token_age=$(($(date +%s) - $(date +%s -r "${token_file}")))

  if [[ $token_age -lt 30 && "$(cat ${token_file})" = "${token_code}" ]]; then
    >&2 echo "MFA not old enough for another attempt, please wait at least $((30-${token_age})) seconds and try again"
    exit 1
  fi
fi

echo ${token_code} > ${token_file}

token_code="--token-code ${token_code}"
user_name=$(aws iam get-user --profile ${profile} | jq -re '.User.UserName')
serial_number="--serial-number $(aws iam list-mfa-devices --profile ${profile} --user-name ${user_name} | jq -re '.MFADevices[].SerialNumber')"
#serial_number="--serial-number $(aws iam list-mfa-devices --profile ${profile} | jq -re '.MFADevices[].SerialNumber')"

# NOTE: The keys should not be exported as AWS_ACCESS_KEY_ID
# or AWS_SECRET_ACCESS_KEY_ID. This will not work. They
# should be exported as other names which can be used below. This prevents
# them from incorrectly being picked up from libraries or commands.
temporary_credentials="$(aws \
	sts \
	get-session-token \
	--profile "${profile}" \
	--duration-seconds 43200 \
	${serial_number} \
	${token_code}
)"

unset AWS_PROFILE

if [ "${temporary_credentials}" != "" ]; then
	echo "export AWS_ACCESS_KEY_ID=$(echo "${temporary_credentials}" | jq -re '.Credentials.AccessKeyId')"
	echo "export AWS_SECRET_ACCESS_KEY=$(echo "${temporary_credentials}" | jq -re '.Credentials.SecretAccessKey')"
	echo "export AWS_SESSION_TOKEN=$(echo "${temporary_credentials}" | jq -re '.Credentials.SessionToken')"
        #echo "export AWS_PROFILE=mfa"
	# Replace [mfa] section in .aws/credentials
	#sed '/\[mfa\]/,/aws_session_token/d' -i ~/.aws/credentials
	#echo "[mfa]" >> ~/.aws/credentials
	#echo "aws_access_key_id = $(echo "${temporary_credentials}" | jq -re '.Credentials.AccessKeyId')" >> ~/.aws/credentials
	#echo "aws_secret_access_key = $(echo "${temporary_credentials}" | jq -re '.Credentials.SecretAccessKey')" >> ~/.aws/credentials
	#echo "aws_session_token = $(echo "${temporary_credentials}" | jq -re '.Credentials.SessionToken')" >> ~/.aws/credentials
else
	echo -e "\nDid you try and reuse an MFA code?"
fi
